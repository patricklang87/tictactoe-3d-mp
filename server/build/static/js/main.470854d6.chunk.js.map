{"version":3,"sources":["redux/gameSlice.js","contexts/socketProvider.js","components/Game/Side.js","components/Game/Cube.js","components/Game/Sheet.js","components/GameInfo/IndicatorCube.js","components/GameInfo/GameInfo.js","components/Setup/RequestRematch.js","components/Setup/AcceptRematch.js","components/Setup/ResetGame.js","components/Game/Game.js","utils/checkForWinner.js","components/Setup/CreateNewGame.js","components/Setup/JoinGame.js","components/Setup/Setup.js","components/viewControls2.js","components/App.js","reportWebVitals.js","redux/viewSlice.js","redux/store.js","index.js"],"names":["gameSlice","createSlice","name","initialState","playerOneTurn","playerNumber","roomName","winner","gameState","rematchRequested","reducers","setPlayerNumber","state","action","payload","setPlayerTurn","setRoomName","setGameState","x","y","z","currentPlayer","setWinner","resetGame","setRematchRequested","actions","SocketContext","React","createContext","useSocket","useContext","SocketProvider","children","useState","socket","setSocket","useEffect","newSocket","io","close","Provider","value","Side","positionValues","useDispatch","useSelector","game","controlledBy","backgroundColor","yourTurn","className","onClick","emit","style","Cube","sides","i","key","push","Sheet","zValue","cubes","IndicatorCube","indicatorCubeColor","indicatorCubeSide","indicatorCube","GameInfo","awaitMessage","RequestRematch","dispatch","AcceptRematch","ResetGame","Game","on","pVs","off","console","log","document","getElementsByTagName","board","row","checkForWinner","gameClassName","CreateNewGame","JoinGame","currentGameCode","setCurrentGameCode","failedJoinMsg","setFailedJoinMsg","onChange","e","target","handleChange","type","placeholder","Setup","mouseIsDown","initMouseX","initMouseY","initRotationX","initRotationY","invertXRotation","onMouseDown","touches","clientX","clientY","initRotation","parseRotationValues","cubeTransform","newCubeX","newCubeY","newCubeZ","getElementsByClassName","transform","cubeY","split","cubeX","cubeZ","slice","length","onMouseMoving","cube","xRotate","yRotate","Number","rotatePhrase","onMouseUp","currentYRotateVal","Math","abs","App","addEventListener","HTML","backroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","viewSlice","rotate","zoom","setRotate","setZoom","setMouseIsDown","configureStore","reducer","gameReducer","view","viewReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"iVAEMA,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACVC,cAAe,KACfC,aAAc,KACdC,SAAU,GACVC,OAAQ,EACRC,UAAW,CACP,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,KAElCC,kBAAkB,GAEtBC,SAAU,CACNC,gBAAiB,SAACC,EAAOC,GACrBD,EAAMP,aAAeQ,EAAOC,SAEhCC,cAAe,SAACH,EAAOC,GACnBD,EAAMR,cAAgBS,EAAOC,SAEjCE,YAAa,SAACJ,EAAOC,GACjBD,EAAMN,SAAWO,EAAOC,SAE5BG,aAAc,SAACL,EAAOC,GAClB,IAAMK,EAAIL,EAAOC,QAAQI,EACnBC,EAAIN,EAAOC,QAAQK,EACnBC,EAAIP,EAAOC,QAAQM,EACnBC,EAAgBT,EAAMR,cAAgB,EAAI,EAChDQ,EAAMJ,UAAUU,GAAGC,GAAGC,GAAKC,EAC3BT,EAAMR,eAAiBQ,EAAMR,eAEjCkB,UAAW,SAACV,EAAOC,GACfD,EAAML,OAASM,EAAOC,SAE1BS,UAAW,SAACX,GACRA,EAAMR,cAAgB,KACtBQ,EAAML,OAAS,EACfK,EAAMJ,UAAY,CAClB,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC9B,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,MAGlCgB,oBAAqB,SAACZ,EAAOC,GACzBD,EAAMH,iBAAmBI,EAAOC,YAKrC,EAAiHd,EAAUyB,QAAnHd,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,cAAeC,EAAxC,EAAwCA,YAAaC,EAArD,EAAqDA,aAAcK,EAAnE,EAAmEA,UAAWC,EAA9E,EAA8EA,UAAWC,EAAzF,EAAyFA,oBACjFxB,IAAf,Q,gCClDM0B,EAAgBC,IAAMC,gBAErB,SAASC,IACZ,OAAOC,qBAAWJ,GAGf,SAASK,EAAT,GAAuC,IAAbC,EAAY,EAAZA,SAC7B,EAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,qBAAU,WACN,IAAMC,EAAYC,IAAG,yBAGrB,OAFAH,EAAUE,GAEH,kBAAMA,EAAUE,WACxB,IAKC,cAACb,EAAcc,SAAf,CAAwBC,MAAOP,EAA/B,SACKF,ICjBE,SAASU,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,eAErBT,GADWU,cACFf,KACTzB,EAAgByC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAK1C,iBAChDC,EAAewC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKzC,gBAC/CC,EAAWuC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKxC,YAC3CC,EAASsC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKvC,UAEzCW,EAAIyB,EAAezB,EACnBC,EAAIwB,EAAexB,EACnBC,EAAIuB,EAAevB,EAEnB2B,EAAeF,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKtC,UAAUU,GAAGC,GAAGC,MAEjE4B,EAAkB,6BACD,IAAjBD,IAAqBC,EAAkB,WACtB,IAAjBD,IAAoBC,EAAkB,aAE1C,IAAMC,EAAY7C,GAAkC,IAAjBC,IAAyBD,GAAkC,IAAjBC,EAa7E,OACI,qBAAK6C,UAAU,OAAOC,QAZN,WACK,IAAjBJ,GAAiC,IAAXxC,GAAgB0C,GACtCf,EAAOkB,KAAK,gBAAiB,CAACT,iBAAgBrC,cAUN+C,MAAO,CAAC,gBAAkB,GAAlB,OAAsBL,MClCnE,SAASM,EAAT,GAEX,IAF8C,IAAnBX,EAAkB,EAAlBA,eACrBY,EAAQ,GACLC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIC,EAAMd,EAAezB,EAAIyB,EAAexB,EAAIwB,EAAevB,EAAIoC,EACnED,EAAMG,KAAK,cAAC,EAAD,CAAMf,eAAgBA,GAAqBc,IAE1D,OACI,qBAAKP,UAAU,OAAf,SACKK,I,MCRE,SAASI,EAAT,GAEX,IAFuC,IAAXC,EAAU,EAAVA,OACxBC,EAAQ,GACH1C,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAID,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMuC,EAAMvC,EAAIC,EAAIyC,EACdjB,EAAiB,CAACzB,IAAGC,IAAGC,EAAGwC,GACjCC,EAAMH,KAAK,cAAC,EAAD,CAAMf,eAAgBA,GAAqBc,IAI9D,OACI,qBAAKP,UAAU,QAAf,SACKW,ICbE,SAASC,IACpB,IAAM1D,EAAgByC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAK1C,iBAGlD2D,EAAqB,sBACV,IAHAlB,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKvC,WAGV,MAAjBH,IACY2D,GAAN,IAAlB3D,EAA6C,UACvB,aAK9B,IAFA,IAAM4D,EAAqB,qBAAKd,UAAU,oBAAoBG,MAAO,CAACL,gBAAiBe,KACnFE,EAAgB,GACX/C,EAAI,EAAGA,EAAI,EAAGA,IACnB+C,EAAcP,KAAKM,GAGvB,OACI,qBAAKd,UAAU,mBAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,gBAAf,SAAgCe,Q,MChBjC,SAASC,IACpB,IAAM9D,EAAgByC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAK1C,iBAChDK,EAAmBoC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKrC,oBACnDH,EAAWuC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKxC,YAC3CC,EAASsC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKvC,UACzCF,EAAewC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKzC,gBAG/C8D,EAAe1D,EAAmB,6BAAH,qBAAgDH,EAAhD,0BAErC,OACI,sBAAK4C,UAAU,WAAf,UACI,cAACY,EAAD,IACa,IAAXvD,IAAkBH,GAAkC,IAAjBC,IAAyBD,GAAkC,IAAjBC,IAAyB,0CACtF,MAAjBD,GACA,qBAAK8C,UAAU,mBAAf,SACG,4BAAIiB,SCjBL,SAASC,IACpB,IAAMC,EAAWzB,cACXV,EAASL,IACTvB,EAAWuC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKxC,YAUjD,OACI,wBAAQ6C,QATQ,WAChBjB,EAAOkB,KAAK,iBAAkB9C,GAC9B+D,EAAS9C,MAOT,6BCdO,SAAS+C,IACpB,IAAMD,EAAWzB,cACXV,EAASL,IACTvB,EAAWuC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKxC,YAWjD,OACI,8BACI,wBAAQ6C,QAXI,WAChBjB,EAAOkB,KAAK,gBAAiB9C,GAC7B+D,EAAS9C,MASL,8B,MCfG,SAASgD,IACpB,IAAM9D,EAAmBoC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKrC,oBACnDF,EAASsC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKvC,UAE/C,OACI,sBAAK2C,UAAU,YAAf,WACMzC,GAAoB,cAAC2D,EAAD,IACpB3D,GAA+B,IAAXF,GAAiB,cAAC+D,EAAD,O,kBCHpC,SAASE,IACpB,IAAMH,EAAWzB,cACXV,EAASL,IACTrB,EAAYqC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKtC,aAC5CD,EAASsC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKvC,UAE/C6B,qBAAU,WACN,GAAc,MAAVF,EAKJ,OAJAA,EAAOuC,GAAG,cAAc,SAACC,GACrBL,EAASpD,EAAayD,OAGnB,WACHxC,EAAOyC,IAAI,iBAEhB,CAACzC,EAAQmC,IAEZjC,qBAAU,WACN,GAAc,MAAVF,EAOJ,OANAA,EAAOuC,GAAG,kBAAkB,WACxBG,QAAQC,IAAI,qBACZR,EAAS7C,GAAoB,OAI1B,WAAOU,EAAOyC,IAAI,qBAC1B,CAACN,EAAUnC,IAEdE,qBAAU,WACN,GAAc,MAAVF,EAOJ,OANAA,EAAOuC,GAAG,kBAAkB,SAACrE,GACzBiE,EAAS7C,GAAoB,IAC7B6C,EAAStD,EAAcX,IACvB0E,SAASC,qBAAqB,QAAQ,GAAG1B,MAAML,gBAAkB,WAG9D,kBAAMd,EAAOyC,IAAI,qBACzB,CAACN,EAAUnC,IAEdE,qBAAU,WACN,IAAM7B,EClDgB,SAACC,GAE3B,IAFyC,gBAIvBA,GAJuB,IAIzC,2BAA6B,CAAC,IAAD,EAApBwE,EAAoB,sBACXA,GADW,IAC3B,2BAAuB,CAAC,IAAfC,EAAc,QACnB,GAAe,IAAXA,EAAI,IAAYA,EAAI,KAAOA,EAAI,IAAMA,EAAI,KAAOA,EAAI,GAEtD,OADSA,EAAI,IAHQ,8BAQ3B,GAAqB,IAAhBD,EAAM,GAAG,IAAYA,EAAM,GAAG,KAAOA,EAAM,GAAG,IAAMA,EAAM,GAAG,KAAOA,EAAM,GAAG,IAAwB,IAAhBA,EAAM,GAAG,IAAYA,EAAM,GAAG,KAAOA,EAAM,GAAG,IAAMA,EAAM,GAAG,KAAOA,EAAM,GAAG,GAErK,OADSA,EAAM,GAAG,GAIpB,IAAK,IAAI9D,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAoB,IAAhB8D,EAAM,GAAG9D,IAAY8D,EAAM,GAAG9D,KAAO8D,EAAM,GAAG9D,IAAM8D,EAAM,GAAG9D,KAAO8D,EAAM,GAAG9D,GAE/E,OADS8D,EAAM,GAAG9D,IAnBiB,8BA0BzC,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAA2B,IAAvBV,EAAU,GAAGW,GAAGD,IAAYV,EAAU,GAAGW,GAAGD,KAAOV,EAAU,GAAGW,GAAGD,IAAMV,EAAU,GAAGW,GAAGD,KAAOV,EAAU,GAAGW,GAAGD,GAElH,OADSV,EAAU,GAAGW,GAAGD,GAK/B,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,GAA4B,IAAvBV,EAAU,GAAG,GAAGU,IAAYV,EAAU,GAAG,GAAGU,KAAOV,EAAU,GAAG,GAAGU,IAAMV,EAAU,GAAG,GAAGU,KAAOV,EAAU,GAAG,GAAGU,IAA+B,IAAvBV,EAAU,GAAG,GAAGU,IAAYV,EAAU,GAAG,GAAGU,KAAOV,EAAU,GAAG,GAAGU,IAAMV,EAAU,GAAG,GAAGU,KAAOV,EAAU,GAAG,GAAGU,GAE3O,OADSV,EAAU,GAAG,GAAGU,GAG3B,GAA4B,IAAvBV,EAAU,GAAGU,GAAG,IAAYV,EAAU,GAAGU,GAAG,KAAOV,EAAU,GAAGU,GAAG,IAAMV,EAAU,GAAGU,GAAG,KAAOV,EAAU,GAAGU,GAAG,IAA+B,IAAvBV,EAAU,GAAGU,GAAG,IAAYV,EAAU,GAAGU,GAAG,KAAOV,EAAU,GAAGU,GAAG,IAAMV,EAAU,GAAGU,GAAG,KAAOV,EAAU,GAAGU,GAAG,GAE3O,OADSV,EAAU,GAAGU,GAAG,GAG3B,GAA4B,IAAvBV,EAAU,GAAG,GAAG,IAAYA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,IAAMA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,IAA+B,IAAvBA,EAAU,GAAG,GAAG,IAAYA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,IAAMA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,IAA+B,IAAvBA,EAAU,GAAG,GAAG,IAAYA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,IAAMA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,IAA+B,IAAvBA,EAAU,GAAG,GAAG,IAAYA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,IAAMA,EAAU,GAAG,GAAG,KAAOA,EAAU,GAAG,GAAG,GAE3d,OADSA,EAAU,GAAG,GAAG,IDMV0E,CAAe1E,GAC1BD,GAAQ8D,EAAS/C,EAAUf,MAChC,CAAC8D,EAAU7D,IAGd,IADA,IAAIsC,EAAO,GACF1B,EAAI,EAAGA,EAAI,EAAGA,IACnB0B,EAAKY,KAAK,cAAC,EAAD,CAAOE,OAAQxC,GAAQ,QAAUA,IAG/C,IAAM+D,EAAgB5E,EAAS,sBAAwB,OAEvD,OACI,qCACI,qBAAK2C,UAAU,UAAf,SACI,qBAAKA,UAAWiC,EAAhB,SACKrC,MAIG,IAAXvC,EAAe,cAAC,EAAD,IAAe,cAAC,EAAD,OEhE5B,SAAS6E,IACpB,IAAMf,EAAWzB,cACXV,EAASL,IAkBf,OAXAO,qBAAU,WACQ,MAAVF,GACJA,EAAOuC,GAAG,iBAAiB,SAACnE,GAIxB,OAFA+D,EAASrD,EAAYV,IAEd,WAAO4B,EAAOyC,IAAI,uBAG9B,CAACzC,EAAQmC,IAGR,8BACI,wBAAQlB,QAlBI,WAChBjB,EAAOkB,KAAK,WACZiB,EAAS1D,EAAgB,KAgBrB,iCCtBG,SAAS0E,IACpB,IAAMhB,EAAWzB,cACXV,EAASL,IACf,EAA8CI,mBAAS,IAAvD,mBAAOqD,EAAP,KAAwBC,EAAxB,KACA,EAA0CtD,mBAAS,IAAnD,mBAAOuD,EAAP,KAAsBC,EAAtB,KA0CA,OA/BArD,qBAAU,WACQ,MAAVF,IACJA,EAAOuC,GAAG,eAAe,YAAgC,IAA9BrE,EAA6B,EAA7BA,cAAeE,EAAc,EAAdA,SAKtC,OAJA+D,EAAStD,EAAcX,IACvBiE,EAASrD,EAAYV,IACrBmF,EAAiB,IAEV,WACHvD,EAAOyC,IAAI,mBAInBzC,EAAOuC,GAAG,YAAY,SAACnE,GAGnB,OAFAmF,EAAiB,QAAD,OAASnF,EAAT,8BAET,WACH4B,EAAOyC,IAAI,gBAInBzC,EAAOuC,GAAG,cAAc,SAACnE,GAGrB,OAFAmF,EAAiB,SAAD,OAAUnF,EAAV,sBAET,WACH4B,EAAOyC,IAAI,qBAKpB,CAACzC,EAAQmC,IAGR,gCACI,uBACIqB,SAAU,SAACC,GAAD,OA3CD,SAACA,GAClBJ,EAAmBI,EAAEC,OAAOnD,OA0CHoD,CAAaF,IAC9BlD,MAAO6C,EACPQ,KAAK,OACLC,YAAY,cAEhB,uBACA,wBAAQ5C,QA7CI,WAChBjB,EAAOkB,KAAK,eAAgBkC,GAC5BjB,EAAS1D,EAAgB,KA2CrB,yBACmB,KAAlB6E,GAAwB,4BAAIA,O,MCvD1B,SAASQ,IACpB,OACI,sBAAK9C,UAAU,QAAf,UACI,cAACY,EAAD,IACA,sBAAKZ,UAAU,eAAf,UACI,cAACkC,EAAD,IACA,yCACA,cAACC,EAAD,U,UCTVY,GAAc,EACdC,EAAa,KACbC,EAAa,KACbC,EAAgB,EAChBC,EAAgB,EAEhBC,GAAkB,EAGhBC,EAAc,SAACZ,GACjB,IAAIzE,EAAKyE,EAAEa,QAAWb,EAAEa,QAAQ,GAAGC,QAAUd,EAAEc,QAC3CtF,EAAKwE,EAAEa,QAAWb,EAAEa,QAAQ,GAAGE,QAAUf,EAAEe,QAC/CR,EAAahF,EACbiF,EAAahF,EACb,IAAIwF,EAAeC,IACnBP,EAAgBM,EAAa,GAC7BP,EAAgBO,EAAa,GACbA,EAAa,GAC7BV,GAAc,GAIZW,EAAsB,WAC1B,IAGIC,EAHAC,EAAW,EACXC,EAAW,EACXC,EAAW,EAMf,GAJIlC,SAASmC,uBAAuB,QAAQ,KAC1CJ,EAAgB/B,SAASmC,uBAAuB,QAAQ,GAAG5D,MAAM6D,UACjEtC,QAAQC,IAAI,OAAQgC,IAElBA,EAAe,CACjB,IAAIM,EAAQN,EAAcO,MAAM,KAAK,GACjCC,EAAQR,EAAcO,MAAM,KAAK,GACjCE,EAAQT,EAAcO,MAAM,KAAK,GACrCL,EAAWI,EAAMI,MAAM,EAAGJ,EAAMK,OAAS,GACzCV,EAAWO,EAAME,MAAM,EAAGF,EAAMG,OAAS,GACzCR,EAAWM,EAAMC,MAAM,EAAGD,EAAME,OAAS,GAE3C,MAAO,CAACT,EAAUD,EAAUE,IAWxBS,EAAgB,SAAC9B,GACrB,IAAIzE,EAAKyE,EAAEa,QAAWb,EAAEa,QAAQ,GAAGC,QAAUd,EAAEc,QAC3CtF,EAAKwE,EAAEa,QAAWb,EAAEa,QAAQ,GAAGE,QAAUf,EAAEe,QAC/C,GAAI5B,SAASmC,uBAAuB,QAAQ,GAAI,CAC5C,IAAIS,EAAO5C,SAASmC,uBAAuB,QAAQ,GACnD,IAAoB,IAAhBhB,EAAsB,CACxB,IAEI0B,EADAC,EAAU1G,EAAIgF,EAAa2B,OAAOxB,GAGpCsB,EADErB,EACQnF,EAAIgF,EAAa0B,OAAOzB,GAExBD,EAAahF,EAAI0G,OAAOzB,GAEpC,IAAI0B,EAAY,kBAAcF,EAAd,wBAAqCD,EAArC,wBARF,EAQE,QAChBD,EAAKrE,MAAM6D,UAAYY,EACvBlD,QAAQC,IAAIiD,MAOdC,EAAY,WACd9B,GAAc,EACd,IAAI+B,EAAoBC,KAAKC,IAAIL,OAAOjB,IAAsB,IAAM,KACpEN,EAAmB0B,EAAoB,IAAMA,EAAoB,KCjDxDG,MAvBf,WDkJErD,SAASC,qBAAqB,QAAQ,GAAGqD,iBAAiB,YAAa7B,GACvEzB,SAASC,qBAAqB,QAAQ,GAAGqD,iBAAiB,YAAaX,GACvE3C,SAASC,qBAAqB,QAAQ,GAAGqD,iBAAiB,UAAWL,GACrEjD,SAASC,qBAAqB,QAAQ,GAAGqD,iBAAiB,aAAc7B,GACxEzB,SAASC,qBAAqB,QAAQ,GAAGqD,iBAAiB,YAAaX,GACvE3C,SAASC,qBAAqB,QAAQ,GAAGqD,iBAAiB,WAAYL,GCpJtE,IAAMzH,EAAWuC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKxC,YAC3CC,EAASsC,aAAY,SAAAjC,GAAK,OAAIA,EAAMkC,KAAKvC,UAY/C,OAVA6B,qBAAU,WACR,IAAIiG,EAAOvD,SAASC,qBAAqB,QAAQ,GAClC,IAAXxE,IAAc8H,EAAKhF,MAAML,gBAAkB,SAChC,IAAXzC,IAAc8H,EAAKhF,MAAML,gBAAkB,WAChC,IAAXzC,IAAc8H,EAAKhF,MAAMiF,eAAiB,WAC7C,CAAC/H,IAMF,8BACgB,KAAbD,EAAkB,cAAC,EAAD,IAAY,cAAC,EAAD,OCdtBiI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLRQ,EAAY/I,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACV8I,OAAQ,CAAE/H,EAAG,GAAIC,EAAG,IACpB8E,aAAa,EACbiD,KAAM,MAEVxI,SAAU,CACNyI,UAAW,SAACvI,EAAOC,GACfD,EAAMqI,OAAS,CAAE/H,EAAGL,EAAOC,QAAQI,EAAGC,EAAGN,EAAOC,QAAQK,IAE5DiI,QAAS,SAACxI,EAAOC,GACbD,EAAMsI,KAAOrI,EAAOC,SAExBuI,eAAgB,SAACzI,EAAOC,GACpBD,EAAMqF,YAAcpF,EAAOC,YAKhC,EAA+CkI,EAAUvH,QACjDuH,GADR,EAAQG,UAAR,EAAmBC,QAAnB,EAA4BC,eACpBL,EAAf,SCnBeM,eAAe,CAC1BC,QAAS,CACLzG,KAAM0G,EACNC,KAAMC,KCCdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC9H,EAAD,UACE,cAAC,IAAD,CAAU+H,MAAOA,GAAjB,SACE,cAAC,EAAD,UAINhF,SAASiF,eAAe,SAM1BxB,M","file":"static/js/main.470854d6.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst gameSlice = createSlice({\r\n    name: \"game\",\r\n    initialState: {\r\n        playerOneTurn: null,\r\n        playerNumber: null,\r\n        roomName: '',\r\n        winner: 0,\r\n        gameState: [\r\n            [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n            [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n            [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n        ],\r\n        rematchRequested: false\r\n    },\r\n    reducers: {\r\n        setPlayerNumber: (state, action) => {\r\n            state.playerNumber = action.payload;\r\n        },\r\n        setPlayerTurn: (state, action) => {\r\n            state.playerOneTurn = action.payload;\r\n        },\r\n        setRoomName: (state, action) => {\r\n            state.roomName = action.payload;\r\n        },\r\n        setGameState: (state, action) => {\r\n            const x = action.payload.x;\r\n            const y = action.payload.y;\r\n            const z = action.payload.z;\r\n            const currentPlayer = state.playerOneTurn ? 1 : 2;\r\n            state.gameState[x][y][z] = currentPlayer;\r\n            state.playerOneTurn = !state.playerOneTurn;\r\n        },\r\n        setWinner: (state, action) => {\r\n            state.winner = action.payload;\r\n        },\r\n        resetGame: (state) => {\r\n            state.playerOneTurn = null;\r\n            state.winner = 0; \r\n            state.gameState = [\r\n            [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n            [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n            [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n            ]\r\n        },\r\n        setRematchRequested: (state, action) => {\r\n            state.rematchRequested = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setPlayerNumber, setPlayerTurn, setRoomName, setGameState, setWinner, resetGame, setRematchRequested } = gameSlice.actions;\r\nexport default gameSlice.reducer;","import React, { useContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children }) {\r\n    const [socket, setSocket] = useState();\r\n\r\n    useEffect(() => {\r\n        const newSocket = io('http://localhost:4000');\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.close();\r\n    }, []);\r\n\r\n    \r\n\r\n    return (\r\n        <SocketContext.Provider value={socket} >\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport './Side.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setGameState } from '../../redux/gameSlice';\r\nimport { useSocket } from '../../contexts/socketProvider';\r\n\r\nexport default function Side({ positionValues }) {\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n    const playerOneTurn = useSelector(state => state.game.playerOneTurn);\r\n    const playerNumber = useSelector(state => state.game.playerNumber);\r\n    const roomName = useSelector(state => state.game.roomName);\r\n    const winner = useSelector(state => state.game.winner)\r\n\r\n    const x = positionValues.x;\r\n    const y = positionValues.y;\r\n    const z = positionValues.z;\r\n\r\n    const controlledBy = useSelector(state => state.game.gameState[x][y][z]);\r\n\r\n    let backgroundColor = \"rgba(252, 252, 142, 0.671)\";\r\n    if (controlledBy === 1 ) backgroundColor = \"hotpink\";\r\n    if (controlledBy === 2) backgroundColor = \"limegreen\";\r\n\r\n    const yourTurn = (playerOneTurn && playerNumber === 1) || (!playerOneTurn && playerNumber === 2);\r\n\r\n    const handleClick = () => {\r\n        if (controlledBy === 0 && winner === 0 && yourTurn) {\r\n            socket.emit('squareClicked', {positionValues, roomName});\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n \r\n\r\n\r\n    return (\r\n        <div className=\"Side\" onClick={handleClick} style={{\"backgroundColor\": `${backgroundColor}`}} >\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Cube.css';\r\nimport Side from './Side';\r\n\r\nexport default function Cube({ positionValues }) {\r\n    const sides = [];\r\n    for (let i = 0; i < 6; i++) {\r\n        let key = positionValues.x + positionValues.y + positionValues.z + i;\r\n        sides.push(<Side positionValues={positionValues} key={key} />)\r\n    }\r\n    return (\r\n        <div className=\"Cube\">\r\n            {sides}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Cube from './Cube';\r\nimport './Sheet.css';\r\n\r\nexport default function Sheet({ zValue }) {\r\n    let cubes = [];\r\n    for (let y = 0; y < 3; y++) {\r\n        for (let x = 0; x < 3; x++) {\r\n            const key = x + y + zValue\r\n            const positionValues = {x, y, z: zValue}\r\n            cubes.push(<Cube positionValues={positionValues} key={key} />)\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className=\"Sheet\">\r\n            {cubes}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function IndicatorCube() {\r\n    const playerOneTurn = useSelector(state => state.game.playerOneTurn);\r\n    const winner = useSelector(state => state.game.winner); \r\n\r\n    let indicatorCubeColor = \"rgba(252, 252, 142)\";\r\n    if (winner === 0 && playerOneTurn != null) {\r\n        if (playerOneTurn === true) indicatorCubeColor = \"hotpink\";\r\n        else indicatorCubeColor = \"limegreen\";\r\n    }\r\n\r\n    const indicatorCubeSide = (<div className=\"indicatorCubeSide\" style={{backgroundColor: indicatorCubeColor}}></div>);\r\n    let indicatorCube = [];\r\n    for (let x = 0; x < 6; x++) {\r\n        indicatorCube.push(indicatorCubeSide);\r\n    }\r\n\r\n    return (\r\n        <div className=\"indicatorCubeDiv\">\r\n            <div className=\"indicatorCubeWrapper\" >\r\n                <div className=\"indicatorCube\">{indicatorCube}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport IndicatorCube from './IndicatorCube';\r\nimport './GameInfo.css';\r\n\r\n\r\nexport default function GameInfo() {\r\n    const playerOneTurn = useSelector(state => state.game.playerOneTurn);\r\n    const rematchRequested = useSelector(state => state.game.rematchRequested);\r\n    const roomName = useSelector(state => state.game.roomName);\r\n    const winner = useSelector(state => state.game.winner);\r\n    const playerNumber = useSelector(state => state.game.playerNumber);\r\n\r\n\r\n    const awaitMessage = rematchRequested ? \"Awaiting Accept Rematch...\" : `Room Name: ${roomName}. Awaiting Opponent...`\r\n\r\n    return (\r\n        <div className=\"GameInfo\">\r\n            <IndicatorCube />\r\n            {(winner === 0 && ((playerOneTurn && playerNumber === 1) || (!playerOneTurn && playerNumber === 2))) && <p>Your Play</p>}\r\n            {playerOneTurn == null &&\r\n            (<div className=\"awaitingOpponent\">\r\n                <p>{awaitMessage}</p>\r\n            </div>) }\r\n            \r\n        </div>\r\n          \r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetGame, setRematchRequested } from '../../redux/gameSlice';\r\nimport { useSocket } from '../../contexts/socketProvider';\r\n\r\nexport default function RequestRematch() {\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n    const roomName = useSelector(state => state.game.roomName);\r\n\r\n    const handleClick = () => {  \r\n        socket.emit('requestRematch', roomName);\r\n        dispatch(resetGame());\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <button onClick={handleClick}>Propose Rematch</button>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSocket } from '../../contexts/socketProvider';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { resetGame, setRematchRequested, setPlayerTurn } from '../../redux/gameSlice';\r\n\r\nexport default function AcceptRematch() {\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n    const roomName = useSelector(state => state.game.roomName);\r\n\r\n    const handleClick = () => {\r\n        socket.emit('acceptRematch', roomName);\r\n        dispatch(resetGame());\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick}>Accept Rematch</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport RequestRematch from './RequestRematch';\r\nimport AcceptRematch from './AcceptRematch';\r\nimport './ResetGame.css';\r\n\r\nexport default function ResetGame() {\r\n    const rematchRequested = useSelector(state => state.game.rematchRequested);\r\n    const winner = useSelector(state => state.game.winner);\r\n\r\n    return (\r\n        <div className=\"ResetGame\">\r\n            {!rematchRequested && <RequestRematch />}\r\n            {(rematchRequested && winner !== 0) && <AcceptRematch />}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Sheet from './Sheet';\r\nimport GameInfo from '../GameInfo/GameInfo';\r\nimport ResetGame from '../Setup/ResetGame';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setGameState, setWinner, setRematchRequested, setPlayerTurn } from '../../redux/gameSlice';\r\nimport { useSocket } from '../../contexts/socketProvider'\r\nimport { checkForWinner } from '../../utils/checkForWinner';\r\nimport './Game.css';\r\n\r\nexport default function Game() {\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n    const gameState = useSelector(state => state.game.gameState);\r\n    const winner = useSelector(state => state.game.winner);\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return;\r\n        socket.on('gameUpdate', (pVs) => {\r\n            dispatch(setGameState(pVs));        \r\n        });  \r\n        \r\n        return () => {\r\n            socket.off('gameUpdate');\r\n        }\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return;\r\n        socket.on('proposeRematch', () => {\r\n            console.log(\"rematch Requested\");\r\n            dispatch(setRematchRequested(true));\r\n\r\n        });\r\n\r\n        return () => {socket.off('proposeRematch')};\r\n    }, [dispatch, socket]);\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return;\r\n        socket.on('confirmRematch', (playerOneTurn) => {\r\n            dispatch(setRematchRequested(false));\r\n            dispatch(setPlayerTurn(playerOneTurn));\r\n            document.getElementsByTagName('HTML')[0].style.backgroundColor = \"white\";\r\n        })\r\n\r\n        return () => socket.off('confirmRematch');\r\n    }, [dispatch, socket]);\r\n\r\n    useEffect(() => {\r\n        const winner = checkForWinner(gameState);\r\n        if (winner) dispatch(setWinner(winner));\r\n    }, [dispatch, gameState]);\r\n\r\n    let game = [];\r\n    for (let z = 0; z < 3; z++) {\r\n        game.push(<Sheet zValue={z} key={\"sheet\" + z} />)\r\n    }\r\n\r\n    const gameClassName = winner ? \"Game winnerRotation\" : \"Game\";\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <div className={gameClassName}>\r\n                    {game}\r\n                </div>\r\n                \r\n            </div>\r\n            {winner === 0 ? <GameInfo /> : <ResetGame />}\r\n        </>\r\n        \r\n    )\r\n}\r\n","export const checkForWinner = (gameState) => {\r\n    //within single board\r\n    let winner;\r\n    // within a single row\r\n    for (let board of gameState) {\r\n      for (let row of board) {\r\n          if (row[0] !== 0 && row[0] === row[1] && row[0] === row[2]) {\r\n            winner = row[0]\r\n            return winner;\r\n          }\r\n      } \r\n      //diagonal within a board\r\n      if ((board[0][0] !== 0 && board[0][0] === board[1][1] && board[0][0] === board[2][2]) || (board[0][2] !== 0 && board[0][2] === board[1][1] && board[0][2] === board[2][0])) {\r\n        winner = board[1][1];\r\n        return winner;\r\n      }\r\n      // row down a single board\r\n      for (let x = 0; x < 3; x++) {\r\n        if (board[0][x] !== 0 && board[0][x] === board[1][x] && board[0][x] === board[2][x]) {\r\n          winner = board[0][x];\r\n          return winner;\r\n        } \r\n      }\r\n      \r\n    }\r\n    // row across 3 boards\r\n    for (let y = 0; y < 3; y++) {\r\n      for (let x = 0; x < 3; x++) {\r\n        if (gameState[0][y][x] !== 0 && gameState[0][y][x] === gameState[1][y][x] && gameState[0][y][x] === gameState[2][y][x]) {\r\n          winner = gameState[0][y][x];\r\n          return winner;\r\n        }\r\n      }\r\n    }  \r\n    for (let x = 0; x < 3; x++) {\r\n      if ((gameState[0][0][x] !== 0 && gameState[0][0][x] === gameState[1][1][x] && gameState[0][0][x] === gameState[2][2][x]) || (gameState[2][0][x] !== 0 && gameState[2][0][x] === gameState[1][1][x] && gameState[2][0][x] === gameState[0][2][x])) {\r\n        winner = gameState[1][1][x]\r\n        return winner;\r\n      }\r\n      if ((gameState[0][x][0] !== 0 && gameState[0][x][0] === gameState[1][x][1] && gameState[0][x][0] === gameState[2][x][2]) || (gameState[2][x][0] !== 0 && gameState[2][x][0] === gameState[1][x][1] && gameState[2][x][0] === gameState[0][x][2])) {\r\n        winner = gameState[1][x][1];\r\n        return winner;\r\n      }\r\n      if ((gameState[0][0][0] !== 0 && gameState[0][0][0] === gameState[1][1][1] && gameState[0][0][0] === gameState[2][2][2]) || (gameState[0][0][2] !== 0 && gameState[0][0][2] === gameState[1][1][1] && gameState[0][0][2] === gameState[2][2][0]) || (gameState[2][0][0] !== 0 && gameState[2][0][0] === gameState[1][1][1] && gameState[2][0][0] === gameState[0][2][2]) || (gameState[2][0][2] !== 0 && gameState[2][0][2] === gameState[1][1][1] && gameState[2][0][0] === gameState[0][2][0]) )  {\r\n        winner = gameState[1][1][1]\r\n        return winner;\r\n      }\r\n    }\r\n    \r\n  }","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoomName, setPlayerNumber } from '../../redux/gameSlice';\r\nimport { useSocket } from '../../contexts/socketProvider';\r\n\r\nexport default function CreateNewGame() {\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n\r\n    const handleClick = () => {\r\n        socket.emit('newGame');\r\n        dispatch(setPlayerNumber(1));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return;\r\n        socket.on('issueRoomName', (roomName) => {\r\n            \r\n            dispatch(setRoomName(roomName));\r\n\r\n            return () => {socket.off('issueRoomName')};\r\n        });\r\n\r\n    }, [socket, dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick}>Create A New Game</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSocket } from '../../contexts/socketProvider';\r\nimport { setPlayerNumber, setPlayerTurn, setRoomName } from '../../redux/gameSlice';\r\n\r\nexport default function JoinGame() {\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n    const [currentGameCode, setCurrentGameCode] = useState('');\r\n    const [failedJoinMsg, setFailedJoinMsg] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setCurrentGameCode(e.target.value);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        socket.emit('joinRoomName', currentGameCode);\r\n        dispatch(setPlayerNumber(2));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket == null) return;\r\n        socket.on('confirmJoin', ({playerOneTurn, roomName}) => {\r\n            dispatch(setPlayerTurn(playerOneTurn));\r\n            dispatch(setRoomName(roomName));\r\n            setFailedJoinMsg('');\r\n\r\n            return () => {\r\n                socket.off('confirmJoin');\r\n            }\r\n        });\r\n\r\n        socket.on('roomFull', (roomName) => {\r\n            setFailedJoinMsg(`Room ${roomName} already has two players.`);\r\n\r\n            return () => {\r\n                socket.off('roomFull');\r\n            }\r\n        });\r\n\r\n        socket.on('noSuchRoom', (roomName) => {\r\n            setFailedJoinMsg(`Room \"${roomName}\" does not exist.`);\r\n\r\n            return () => {\r\n                socket.off('noSuchRoom');\r\n            }\r\n        });\r\n\r\n        \r\n    }, [socket, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                onChange={(e) => handleChange(e)}\r\n                value={currentGameCode}\r\n                type=\"text\"\r\n                placeholder=\"Room Code\"\r\n            />\r\n            <br />\r\n            <button onClick={handleClick}>Join A Game</button>\r\n            {failedJoinMsg !== '' && <p>{failedJoinMsg}</p>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport CreateNewGame from './CreateNewGame';\r\nimport JoinGame from './JoinGame';\r\nimport IndicatorCube from '../GameInfo/IndicatorCube';\r\nimport './Setup.css';\r\n\r\nexport default function Setup() {\r\n    return (\r\n        <div className=\"Setup\">\r\n            <IndicatorCube />\r\n            <div className=\"setupOptions\">\r\n                <CreateNewGame />\r\n                <div>- OR -</div>\r\n                <JoinGame />\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n","// const showRotation = () => {\r\n//     console.log(document.getElementsByClassName('Game')[0].style[\"transform\"]);\r\n//   }\r\n  \r\n  let mouseIsDown = false;\r\n  let initMouseX = null;\r\n  let initMouseY = null;\r\n  let initRotationX = 0;\r\n  let initRotationY = 0;\r\n  let initRotationZ = 0;\r\n  let invertXRotation = false;\r\n  let activeAxes = \"XY\";\r\n  \r\n  const onMouseDown = (e) => {\r\n      let x = (e.touches) ? e.touches[0].clientX : e.clientX;\r\n      let y = (e.touches) ? e.touches[0].clientY : e.clientY;\r\n      initMouseX = x;\r\n      initMouseY = y;\r\n      let initRotation = parseRotationValues();\r\n      initRotationY = initRotation[0];\r\n      initRotationX = initRotation[1];\r\n      initRotationZ = initRotation[2];\r\n      mouseIsDown = true;\r\n\r\n  }\r\n\r\n  const parseRotationValues = () => {\r\n    let newCubeX = 0;\r\n    let newCubeY = 0;\r\n    let newCubeZ = 0;\r\n    let cubeTransform;\r\n    if (document.getElementsByClassName('Game')[0]) {\r\n      cubeTransform = document.getElementsByClassName('Game')[0].style.transform;\r\n      console.log(\"ct: \", cubeTransform);\r\n    }\r\n    if (cubeTransform) {\r\n      let cubeY = cubeTransform.split(' ')[0];\r\n      let cubeX = cubeTransform.split(' ')[1];\r\n      let cubeZ = cubeTransform.split(' ')[2];\r\n      newCubeY = cubeY.slice(8, cubeY.length - 4);\r\n      newCubeX = cubeX.slice(8, cubeX.length - 4);\r\n      newCubeZ = cubeZ.slice(8, cubeZ.length - 4);\r\n    }\r\n    return [newCubeY, newCubeX, newCubeZ];\r\n  }\r\n\r\n  const determineAxes = () => {\r\n    let activeAxis;\r\n    let currentYRotateVal = Math.abs(Number(parseRotationValues()[0]) % 360);\r\n    let currentXRotateVal = Math.abs(Number(parseRotationValues()[1]) % 360);\r\n    let currentZRotateVal = Math.abs(Number(parseRotationValues()[2]) % 360);\r\n    \r\n  }\r\n  \r\n  const onMouseMoving = (e) => {\r\n    let x = (e.touches) ? e.touches[0].clientX : e.clientX;\r\n    let y = (e.touches) ? e.touches[0].clientY : e.clientY;\r\n    if (document.getElementsByClassName('Game')[0]) {\r\n        let cube = document.getElementsByClassName('Game')[0];\r\n        if (mouseIsDown === true) {\r\n          let zRotate = 0;\r\n          let yRotate = x - initMouseX + Number(initRotationY);\r\n          let xRotate;\r\n          if (invertXRotation) {\r\n            xRotate = y - initMouseY + Number(initRotationX);\r\n          } else {\r\n            xRotate = initMouseY - y + Number(initRotationX);\r\n          }\r\n          let rotatePhrase = `rotateY(${yRotate}deg) rotateX(${xRotate}deg) rotateZ(${zRotate}deg)`;\r\n          cube.style.transform = rotatePhrase;   \r\n          console.log(rotatePhrase);\r\n      }      \r\n    }    \r\n  }\r\n\r\n\r\n  \r\n  const onMouseUp = () => {\r\n      mouseIsDown = false;\r\n      let currentYRotateVal = Math.abs(Number(parseRotationValues()[0]) % 360);\r\n      invertXRotation = (currentYRotateVal > 90 && currentYRotateVal < 270) ? true : false;\r\n\r\n  }\r\n\r\n  // const setZeroRotation = () => {\r\n  //   let planeY = document.getElementsByClassName('planeY')[0];\r\n  //   let planeX = document.getElementsByClassName('planeX')[0];\r\n  //   let rotatePhraseY = `rotateY(0deg)`;\r\n  //       let rotatePhraseX = `rotateX(0deg)`;\r\n  //       planeY.style.transform = rotatePhraseY;   \r\n  //       planeX.style.transform = rotatePhraseX;\r\n  // }\r\n\r\n//  document.getElementsByTagName('HTML')[0].addEventListener('mousedown', setZeroRotation);\r\n  \r\n//   const changeDistance = (e) => {\r\n//     let wrapper = document.getElementById('wrapper');\r\n//     let distance = e.target.value;\r\n//     let newDistance = `${distance}px`;\r\n//     wrapper.style.perspective = newDistance;\r\n//   }\r\n  \r\n  \r\n//   let isSliderClicked = false;\r\n  \r\n//   const mouseDownSlider = () => {\r\n//     isSliderClicked = true;\r\n//     document.getElementsByTagName('HTML')[0].removeEventListener('mousedown', onMouseDown);\r\n//     document.getElementsByTagName('HTML')[0].removeEventListener('mousemove', onMouseMoving);\r\n//     document.getElementsByTagName('HTML')[0].removeEventListener('mouseup', onMouseUp);\r\n//     document.getElementsByTagName('HTML')[0].removeEventListener('touchstart', onMouseDown);\r\n//     document.getElementsByTagName('HTML')[0].removeEventListener('touchend', onMouseMoving);\r\n//     document.getElementsByTagName('HTML')[0].removeEventListener('touchmove', onMouseUp);\r\n//   }\r\n  \r\n//   const mouseUpSlider = () => {\r\n//     isSliderClicked = false;\r\n//     document.getElementsByTagName('HTML')[0].addEventListener('mousedown', onMouseDown);\r\n//     document.getElementsByTagName('HTML')[0].addEventListener('mousemove', onMouseMoving);\r\n//     document.getElementsByTagName('HTML')[0].addEventListener('mouseup', onMouseUp);\r\n//     document.getElementsByTagName('HTML')[0].addEventListener('touchstart', onMouseDown);\r\n//     document.getElementsByTagName('HTML')[0].addEventListener('touchend', onMouseMoving);\r\n//     document.getElementsByTagName('HTML')[0].addEventListener('touchmove', onMouseUp);\r\n    \r\n//   }\r\n  \r\n//   let id = null;\r\n//   const adjustSize = (e) => {\r\n//     clearInterval(id);\r\n//     id = setInterval(frame, 5);\r\n//     console.log(\"isSliderClicked: \", isSliderClicked);\r\n//     function frame() {\r\n//       if (isSliderClicked !== true) {\r\n//         clearInterval(id);\r\n//       } else {\r\n//         let wrapper = document.getElementById('wrapper');\r\n//         let distance = e.target.value;\r\n//         let newDistance = `${distance}px`;\r\n//         wrapper.style.perspective = newDistance;\r\n//       }\r\n//     }\r\n//   } \r\n  \r\n\r\nexport const addViewControls = () => {  \r\n  // document.getElementById('slider').addEventListener('change', changeDistance);\r\n//   document.getElementById('slider').addEventListener('mousedown', mouseDownSlider);\r\n//   document.getElementById('slider').addEventListener('mouseup', mouseUpSlider);\r\n//   document.getElementById('slider').addEventListener('mousemove', adjustSize);\r\n//   document.getElementById('slider').addEventListener('touchstart', mouseDownSlider);\r\n//   document.getElementById('slider').addEventListener('touchend', mouseUpSlider);\r\n//   document.getElementById('slider').addEventListener('touchmove', adjustSize);\r\n//   document.getElementById('slider').addEventListener('click', changeDistance);\r\n//   document.getElementsByTagName('HTML')[0].addEventListener('click', showRotation);\r\n  document.getElementsByTagName('HTML')[0].addEventListener('mousedown', onMouseDown);\r\n  document.getElementsByTagName('HTML')[0].addEventListener('mousemove', onMouseMoving);\r\n  document.getElementsByTagName('HTML')[0].addEventListener('mouseup', onMouseUp);\r\n  document.getElementsByTagName('HTML')[0].addEventListener('touchstart', onMouseDown);\r\n  document.getElementsByTagName('HTML')[0].addEventListener('touchmove', onMouseMoving);\r\n  document.getElementsByTagName('HTML')[0].addEventListener('touchend', onMouseUp);\r\n}","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Game from './Game/Game';\nimport Setup from './Setup/Setup';\nimport './App.css';\n\nimport { addViewControls } from './viewControls2';\n\nfunction App() {\n  addViewControls();\n\n  const roomName = useSelector(state => state.game.roomName);\n  const winner = useSelector(state => state.game.winner);\n\n  useEffect(() => {\n    let HTML = document.getElementsByTagName('HTML')[0];\n    if (winner === 2) HTML.style.backgroundColor = \"green\";\n    if (winner === 1) HTML.style.backgroundColor = \"hotpink\";\n    if (winner === 0) HTML.style.backroundColor = \"white\";\n  }, [winner])\n  \n\n \n\n  return (\n    <div >\n      {roomName === '' ? <Setup /> : <Game />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst viewSlice = createSlice({\r\n    name: \"view\",\r\n    initialState: {\r\n        rotate: { x: 30, y: 30},\r\n        mouseIsDown: false,\r\n        zoom: null\r\n    },\r\n    reducers: {\r\n        setRotate: (state, action) => {\r\n            state.rotate = { x: action.payload.x, y: action.payload.y}\r\n        },\r\n        setZoom: (state, action) => {\r\n            state.zoom = action.payload;\r\n        },\r\n        setMouseIsDown: (state, action) => {\r\n            state.mouseIsDown = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setRotate, setZoom, setMouseIsDown } = viewSlice.actions;\r\nexport default viewSlice.reducer;\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport gameReducer from './gameSlice';\r\nimport viewReducer from './viewSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        game: gameReducer,\r\n        view: viewReducer\r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { SocketProvider } from './contexts/socketProvider';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SocketProvider>\n      <Provider store={store} >\n        <App />\n      </Provider>\n    </SocketProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}